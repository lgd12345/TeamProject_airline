<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.airline.a1.booking.BookingMapper">

<select id="airportList" resultType="java.lang.String">
	select distinct depAirportNm from flightData order by depAirportNm asc
</select>


<select id="airList" parameterType="com.airline.a1.booking.BookingTicketVO" resultType="com.airline.a1.booking.FlightDataVO">
<!-- select * from flightData where depAirportNm = #{depLoc} and arrAirportNm = #{arrLoc} and depPlandTime like concat(#{depStartTime},'%') order by depPlandTime asc -->
select A.*, ifnull(B.seatTotal,0) seatTotal 
from flightData A left outer join (select count(seatName) seatTotal, fnum from seat group by fnum) B 
on A.fnum=B.fnum
where A.depAirportNm = #{depLoc} 
and A.arrAirportNm = #{arrLoc} 
and A.depPlandTime like concat(#{depStartTime},'%')
order by A.depPlandTime asc
</select>

<select id="airportDepList" resultType="com.airline.a1.booking.BookingTicketVO" parameterType="com.airline.a1.booking.BookingTicketVO">
	select distinct arrAirportNm from flightData where depAirportNm = #{depLoc} order by arrAirportNm asc 
</select>

<select id="oneSelect" parameterType="com.airline.a1.booking.FlightDataVO" resultType="com.airline.a1.booking.FlightDataVO">
	select * from flightData where fnum=#{fnum}
</select>

<insert id="bookingInsert" parameterType="com.airline.a1.booking.BookingTicketVO" useGeneratedKeys="true" keyProperty="bnum">
insert into bookingTicket values 
(#{bnum}, #{bookingNum}, #{flightBNum}, #{kind}, #{adult}, #{child}, #{depFnum}, #{arrFnum}, 
now(), #{resEmail}, #{resECheck}, #{resPhone}, #{resPCheck}, #{gender}, #{name}, #{birth}, #{memberNum}, #{id})
</insert>


<insert id="priceInsertOne" parameterType="com.airline.a1.booking.BookingPriceVO" useGeneratedKeys="true" keyProperty="bpnum">
insert into bookingPrice values (#{bpnum}, #{bookingNum}, #{bnum}, #{price},#{couName}, #{couponDis}, #{fuelTax},
#{airportTax}, #{totalPrice}, null ,null, #{mileagePlus}, #{memberNum}, #{id})
</insert>

<update id="priceInsertResult" parameterType="com.airline.a1.booking.BookingPriceVO">
update bookingPrice set mileageMin=#{mileageMin}, totalAllPrice=#{totalAllPrice}
where bpnum = #{bpnum}
</update>

<!--  -->
<select id="flightInfo" parameterType="com.airline.a1.booking.FlightDataVO" resultType="com.airline.a1.booking.FlightDataVO">
select * from flightData
where depAirportNm = #{depAirportNm} and arrAirportNm = #{arrAirportNm} and depPlandTime like concat('%',#{depPlandTime},'%')
order by depPlandTime asc
</select>

<select id="flightList" parameterType="com.airline.a1.booking.FlightDataVO" resultType="com.airline.a1.booking.FlightDataVO">
select * from flightData
where depPlandTime > #{depPlandTime}
order by depPlandTime asc
limit 0, 20
</select>


<!-- 회원번호 찾기 -->
<select id="searchMember" parameterType="com.airline.a1.member.MembersVO" resultType="com.airline.a1.member.MembersVO">
select * from members
where name=#{name} and id=#{id}
</select>

<!-- index 출도착  -->
<select id="indexdep" parameterType="com.airline.a1.booking.FlightDataVO" resultType="com.airline.a1.booking.FlightDataVO">
    select * from flightData
    where depAirportNm = #{depAirportNm} and arrAirportNm = #{arrAirportNm}
    and depPlandTime between #{depPlandTime} and #{arrPlandTime}
    order by depPlandTime desc
    limit 0, 10
</select>




</mapper>
