<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.airline.a1.admin.AdminMapper">
  
	<select id="airlineList" resultType="com.airline.a1.admin.AirlineVO">
	select aName from airline order by aName asc
	</select>
	
	<select id="airallList" resultType="com.airline.a1.booking.FlightDataVO">
	select * from flightData 
	order by depPlandTime desc
	</select>
	
<!-- 	<select id="airallList" resultType="com.airline.a1.booking.FlightDataVO">
	select * from flightData 
	order by depPlandTime desc
	</select> -->
	
	
	<select id="airpartList" parameterType="com.airline.a1.booking.FlightDataVO" resultType="com.airline.a1.booking.FlightDataVO">
	select * from flightData 
	where airlineNm=#{airlineNm}
	order by depPlandTime desc
	</select>
	
	<select id="airportpartList" parameterType="com.airline.a1.booking.FlightDataVO" resultType="com.airline.a1.booking.FlightDataVO">
	select * from flightData
	where depAirportNm = #{depAirportNm}
	order by depPlandTime desc
	</select>
	
	
	<select id="getBookingInfo" parameterType="com.airline.a1.checkIn.ETicketVO" resultType="com.airline.a1.checkIn.ETicketVO">
		select depPlandTime,arrPlandTime,kind,bookingTicket.bnum,fnum,bookingTicket.bookingNum,flightBNum,name,bookingTicket.id,depAirportNm,vihicleId,arrAirportNm,depPlandTime,arrPlandTime,totalPrice 
		from flightData join bookingTicket 
		on bookingTicket.depFnum = flightData.fnum 
		join bookingPrice 
		on bookingPrice.bnum = bookingTicket.bnum
	</select>


<!-- 매출관리 -->
	<select id="saleterm" parameterType="com.airline.a1.booking.FlightDataVO" resultType="com.airline.a1.booking.FlightDataVO">
	select Z.aId vihicleId, Z.aName airlineNm, Z.aCode depPlandTime, Y.airlineNm, ifnull(Y.a, 0) arrPlandTime 
	from (select * from airline order by aName asc) Z
	left outer join 
	(select airlineNm, sum(totalAllPrice) a from 
	(select distinct A.bookingNum, ifnull(A.totalAllPrice,0) totalAllPrice, B.resDate, B.depFnum, C.* 
	from bookingPrice A
	left join bookingTicket B
	on A.bnum = B.bnum
	left join flightData C
	on B.depFnum = C.fnum
	where DATE_FORMAT(resDate, '%Y-%m-%d %H:%i') BETWEEN #{depPlandTime} AND #{arrPlandTime}) D
	group by D.airlineNm
	order by airlineNm asc) Y
	on Z.aName = Y.airlineNm
	where Z.aName like concat(#{airlineNm}, '%')
	order by Z.aName asc
	</select>
	
	<select id="getMemberList" resultType="com.airline.a1.member.MembersVO">
		select * from members where id != 'admin' order by id asc
	</select>
	
	<select id="saletermAir" parameterType="com.airline.a1.booking.FlightDataVO" resultType="com.airline.a1.booking.FlightDataVO">
	select Z.cityEng vihicleId, Z.apName airlineNm, Z.cityCode depPlandTime, Y.depAirportNm, ifnull(Y.a, 0) arrPlandTime 
	from (select * from airport order by apName asc) Z
	left outer join 
	(select depAirportNm, sum(totalAllPrice) a from 
	(select distinct A.bookingNum, ifnull(A.totalPrice,0) totalAllPrice, B.resDate, B.depFnum, C.* 
	from bookingPrice A
	left join bookingTicket B
	on A.bnum = B.bnum
	left join flightData C
	on B.depFnum = C.fnum
	where DATE_FORMAT(resDate, '%Y-%m-%d %H:%i') BETWEEN #{depPlandTime} AND #{arrPlandTime}) D
	group by D.depAirportNm
	order by depAirportNm asc) Y
	on Z.apName = Y.depAirportNm
	where Z.apName like concat(#{airlineNm}, '%')
	order by Z.apName asc
	</select>
	
	<select id="airportList" resultType="com.airline.a1.admin.AirportVO">
	select * from airport order by apName asc
	</select>

	
	<!-- main -->
	<select id="tprice" parameterType="com.airline.a1.booking.FlightDataVO" resultType="java.lang.Integer">
	select sum(arrPlandTime) totalAllPrice from( 
	select Z.aId vihicleId, Z.aName airlineNm, Z.aCode depPlandTime, Y.airlineNm t, ifnull(Y.a, 0) arrPlandTime 
	from (select * from airline order by aName asc) Z
	left outer join 
	(select D.airlineNm, sum(totalAllPrice) a from 
	(select distinct A.bookingNum, ifnull(A.totalAllPrice,0) totalAllPrice, B.resDate, B.depFnum, C.* 
	from bookingPrice A
	left join bookingTicket B
	on A.bnum = B.bnum
	left join flightData C
	on B.depFnum = C.fnum
	where DATE_FORMAT(resDate, '%Y-%m-%d %H:%i') BETWEEN #{depPlandTime} AND #{arrPlandTime}) D
	group by D.airlineNm
	order by D.airlineNm asc) Y
	on Z.aName = Y.airlineNm
	where Z.aName like concat('', '%')
	order by Z.aName asc) kk
	</select>
	
	<select id="trate" parameterType="com.airline.a1.booking.FlightDataVO" resultType="java.lang.Double">
	select 
	((select count(*) from bookingTicket
	where depFnum between 
	(select min(fnum) from flightData where depPlandTime like concat(#{depPlandTime},'%')) 
	and (select max(fnum) from flightData where depPlandTime like concat(#{depPlandTime},'%')) )
	/
	(select 
	(select max(fnum) - min(fnum) from flightData
	where depPlandTime like concat(#{depPlandTime},'%')
	) * 195)) * 100
	</select>
	
	<select id="ftotal" parameterType="com.airline.a1.booking.FlightDataVO" resultType="java.lang.Integer">
	select max(fnum) - min(fnum) from flightData
	where depPlandTime like concat(#{depPlandTime},'%')
	</select>
	
		<select id="limoSum" parameterType="java.lang.String" resultType="java.lang.Integer">
		select ifnull(sum(limoPrice),0)
		from (select * from limo where depLoc = #{airport} or arrLoc= #{airport}) L
		where limoDate like '2020-02-%'
	</select>

	<select id="limoTotalSum" resultType="java.lang.Integer">
		select ifnull(sum(limoPrice),0)
		from (select * from limo) L
		where limoDate like '2020-02-%'
	</select>

	<select id="limoTotalPerson" parameterType="java.lang.String" resultType="java.lang.Integer">
		select ifnull(sum(person) + sum(child),0)
		from (select * from limo where depLoc = #{airport} or arrLoc=#{airport}) L
		where limoDate = curdate()

	</select>

	<select id="personSum" resultType="java.lang.Integer">
		select ifnull(sum(person) + sum(child),0)
		from (select * from limo) L
		where limoDate = curdate()
	</select>

	<select id="todaySum" parameterType="java.lang.String" resultType="java.lang.Integer">
		select ifnull(sum(limoPrice),0)
		from (select * from limo where depLoc = #{airport} or arrLoc= #{airport}) L
		where limoDate = curdate()
	</select>

	<select id="limoTodaySum" resultType="java.lang.Integer">
		select ifnull(sum(limoPrice),0)
		from (select * from limo) L
		where limoDate = curdate()
	</select>
	
	<select id="limoMember" resultType="com.airline.a1.limo.LimoVO">
		select * from limo order by id desc
	</select>

  
  </mapper>